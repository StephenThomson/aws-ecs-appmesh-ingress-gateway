 upstream application_in_task {
    # set the server IP so that the traffic will attempt to 
    # egress the task and get caught by the appmesh iptables rules
    server 10.10.10.10:_APP_PORT ;
}

log_format json_log_format escape=json '{"body_bytes_sent": $body_bytes_sent, '
'"bytes_sent": $bytes_sent, '
'"connection": "$connection", '
'"gzip_ratio": "$gzip_ratio", '
'"hostname": "$hostname", '
'"http_host": "$host", '
'"http_referrer": "$http_referer", '
'"http_user_agent": "$http_user_agent", '
'"http_x_request_chain": "$http_x_request_chain", '
'"http_x_client_id": "$http_x_client_id", '
'"http_x_application_id": "$http_x_application_id", '
'"http_x_session_id": "$http_x_session_id", '
'"http_x_request_id": "$http_x_request_id", '
'"remote_addr": "$remote_addr", '
'"http_true_client_ip": "$http_true_client_ip", '
'"proxy_host": "$proxy_host", '
'"remote_user": "$remote_user", '
'"request": "$request", '
'"request_method": "$request_method", '
'"request_time": $request_time, '
'"request_length": $request_length, '
'"sent_http_location": "$sent_http_location", '
'"server_name": "$server_name", '
'"server_port": $server_port, '
'"status": $status, '
'"time_local": "$time_local", '
'"msec": "$msec", '
'"upstream_addr": "$upstream_addr", '
'"upstream_http_proxy_agent": "$upstream_http_proxy_agent", '
'"upstream_http_server": "$upstream_http_server", '
'"upstream_response_length": $upstream_response_length, '
'"upstream_response_time": $upstream_response_time, '
'"upstream_status": $upstream_status, '
'"x_forwarded_for": "$http_x_forwarded_for" }';


server {
    listen 10000;

    server_name _;

    access_log /var/log/nginx/access.log json_log_format;

    client_max_body_size       100m;
    client_body_buffer_size    128k;

    proxy_connect_timeout      5;
    proxy_send_timeout         45;
    proxy_read_timeout         60;

    proxy_buffer_size          8k;
    proxy_buffers              4 32k;
    proxy_busy_buffers_size    64k;
    proxy_temp_file_write_size 64k;
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    # Hide the nginx version number from the Server heading
    server_tokens off;

    # Remove 'nginx' server header
    #more_set_headers Server;

    location /nginx-health {
        return 200 "healthy\n";
    }

    location / {
        proxy_pass       http://application_in_task;
        proxy_next_upstream       off;
    }
}
